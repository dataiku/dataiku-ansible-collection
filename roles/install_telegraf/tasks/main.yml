---
- name: Create download dir
  become: true
  ansible.builtin.file:
    path: /opt/telegraf
    state: directory
    mode: "755"

- name: Install telegraf for ReadHat or AlmaLinux
  ansible.builtin.include_tasks: "install_telegraf_rpm.yml"
  when: ansible_os_family == 'RedHat'

- name: Install telegraf for Debian, Ubuntu
  ansible.builtin.include_tasks: "install_telegraf_deb.yml"
  when: ansible_os_family == 'Debian'

- name: Check if docker is installed
  become: true
  ansible.builtin.command: command -v docker
  register: docker_installed
  ignore_errors: true
  changed_when: false

- name: Allow telegraf to docker
  become: true
  ansible.builtin.user:
    name: telegraf
    groups: [docker]
    append: true
  notify: restart telegraf
  when: docker_installed.rc == 0

- name: Create telegraf systemd drop-in directory
  become: true
  ansible.builtin.file:
    path: /etc/systemd/system/telegraf.service.d
    state: directory
    mode: "755"

- name: Create telegraf systemd drop-in
  become: true
  ansible.builtin.copy:
    dest: /etc/systemd/system/telegraf.service.d/override.conf
    content: |
      [Service]
      CapabilityBoundingSet = CAP_DAC_READ_SEARCH CAP_SYS_PTRACE
      AmbientCapabilities = CAP_DAC_READ_SEARCH CAP_SYS_PTRACE
      NoNewPrivileges = true
      EnvironmentFile=-/etc/telegraf/telegraf.secrets
  notify:
  - daemon reload
  - restart telegraf

- name: Override telegraf conf
  become: true
  ansible.builtin.copy:
    content: "{{ telegraf_conf_core_content }}"
    dest: "/etc/telegraf/telegraf.conf"
    mode: "644"
    owner: root
    group: root
  notify: restart telegraf

- name: Create telegraf configuration drop-ins
  become: true
  ansible.builtin.copy:
    content: "{{ item.value }}"
    dest: "/etc/telegraf/telegraf.d/dss-{{ item.key }}.conf"
    mode: "644"
    owner: root
    group: root
  notify: restart telegraf
  loop: "{{ telegraf_internal_confs }}"

- name: Configure telegraf authentication to DSS
  when: telegraf_conf_use_legacy_graphite | bool is false
  block:
    - name: Create DSS api key
      become: true
      become_user: dataiku
      dataiku.dss.dss_get_credentials:
        datadir: "{{ telegraf_conf_dss_datadir }}"
        api_key_name: telegraf-monitoring
      register: dss_credentials

    - name: Store DSS credentials in telegraf secret file
      become: true
      no_log: true
      ansible.builtin.copy:
        content: "DSS_API_KEY={{ dss_credentials['api_key'] }}"
        dest: /etc/telegraf/telegraf.secrets
        mode: "600"
        owner: root
        group: root

- meta: flush_handlers

- name: Enable telegraf service
  become: true
  ansible.builtin.systemd:
    name: telegraf
    enabled: true
    state: started
