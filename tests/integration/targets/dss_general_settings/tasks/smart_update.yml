---
################################
# DSS General settings Execution Config Smart Update
################################
- name: Create Container Execution Config and Spark Execution Config
  dataiku.dss.dss_general_settings:
    connect_to: "{{ dss_connection_info }}"
    settings:
      containerSettings:
        executionConfigs:
          - name: ansible-collection-1
            type: DOCKER
            usableBy: ALLOWED
            allowedGroups:
              - administrators
          - name: ansible-collection-2
            type: DOCKER
      sparkSettings:
        executionConfigs:
          - name: ansible-collection-1
            description: ansible collection testing description
          - name: ansible-collection-2
  register: container_and_spark_configs

- name: Smart update Container Execution and Spark Configs
  dataiku.dss.dss_general_settings:
    connect_to: "{{ dss_connection_info }}"
    settings:
      containerSettings:
        executionConfigs:
          - name: ansible-collection-1
            ensureNamespaceCompliance: true
          - name: ansible-collection-2
            repositoryURL: dummy-ansible-collection-registry/root-repository
      sparkSettings:
        executionConfigs:
          - name: ansible-collection-2
            conf:
              - key: spark.executor.memory
                value: 12g
                isFinal: false
                secret: false
              - key: spark.port.maxRetries
                value: '1'
                isFinal: false
                secret: false
  register: smart_update

- name: prepare facts for assertions
  set_fact:
    expected_container_exec_config_udpate:
      repositoryURL: dummy-ansible-collection-registry/root-repository
      ensureNamespaceCompliance: true
    expected_spark_exec_config_udpate:
      conf:
        - key: spark.executor.memory
          value: 12g
          isFinal: false
          secret: false
        - key: spark.port.maxRetries
          value: '1'
          isFinal: false
          secret: false

- assert:
    that:
      - smart_update is changed
      - smart_update.message == "MODIFIED"
      - smart_update.dss_general_settings is defined
      - smart_update.previous_settings is defined
      - smart_update.dss_general_settings | json_query('containerSettings.executionConfigs[*].repositoryURL') | length == 1
      - smart_update.dss_general_settings | json_query('containerSettings.executionConfigs[*].repositoryURL') | first == expected_container_exec_config_udpate.repositoryURL
      - smart_update.dss_general_settings | json_query('containerSettings.executionConfigs[*].ensureNamespaceCompliance') | first == expected_container_exec_config_udpate.ensureNamespaceCompliance
      - smart_update.dss_general_settings | json_query('sparkSettings.executionConfigs[*].conf') | last == expected_spark_exec_config_udpate.conf


################################
# Check DSS General settings Execution Config Smart Update Idempotence
################################
- name: Check idempotence of Container Execution and Spark Configs Smart update
  dataiku.dss.dss_general_settings:
    connect_to: "{{ dss_connection_info }}"
    settings:
      containerSettings:
        executionConfigs:
          - name: ansible-collection-1
            ensureNamespaceCompliance: true
          - name: ansible-collection-2
            repositoryURL: dummy-ansible-collection-registry/root-repository
      sparkSettings:
        executionConfigs:
          - name: ansible-collection-2
            conf:
              - key: spark.executor.memory
                value: 12g
                isFinal: false
                secret: false
              - key: spark.port.maxRetries
                value: '1'
                isFinal: false
                secret: false
  register: smart_update_idem

- assert:
    that:
      - smart_update_idem is not changed
      - smart_update_idem.message == "UNCHANGED"
      - smart_update_idem.dss_general_settings is defined
      - smart_update_idem.previous_settings is defined
